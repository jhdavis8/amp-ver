#ifndef _ATOMICMARKABLEREF_H
#define _ATOMICMARKABLEREF_H
/*
 * AtomicMarkableReference implementation
 * Josh Davis, Aamir Majeed
 * Apr-2018
 * VIP-HPC, Univ. of Delaware
 */
#include <stdbool.h>

typedef struct AtomicMarkableReference * AtomicMarkableReference;

AtomicMarkableReference
AtomicMarkableReference_create(void* ref, bool m);

void
AtomicMarkableReference_destroy(AtomicMarkableReference ref);

bool
AtomicMarkableReference_compareAndSet(AtomicMarkableReference ref,
                    void* exp_ref, void* new_ref,
                    bool exp_mark, bool new_mark);

bool
AtomicMarkableReference_attemptMark(AtomicMarkableReference ref,
                 void* exp_ref, bool new_mark);

void
AtomicMarkableReference_set(AtomicMarkableReference ref, void* r, bool m);

void*
AtomicMarkableReference_get(AtomicMarkableReference amr, bool* mark_out);

void*
AtomicMarkableReference_getReference(AtomicMarkableReference amr);

bool
AtomicMarkableReference_isMarked(AtomicMarkableReference amr);

#endif
